{
  "logger": {
    "console": {
      "handleExceptions": false,
      "level": "error",
      "colorize": true,
      "prettyPrint": true
    }
  },
  "database": {
    "arango": {
      "provider": "arango",
      "host": "127.0.0.1",
      "port": 8529,
      "database": "chassis-test",
      "autoCreate": true
    },
    "nedb": {
      "provider": "nedb",
      "collections": {
        "test": {}
      }
    }
  },
  "cache": {
    "one": [
      {
        "provider": "memory"
      }
    ],
    "many": [
      {
        "provider": "memory"
      },
      {
        "provider": "memory"
      }
    ]
  },
  "client": {
    "test": {
      "logger": {
        "console": {
          "handleExceptions": false,
          "level": "error",
          "colorize": true,
          "prettyPrint": true
        }
      },
      "transports": {
        "grpc": {
          "service": "test.Test",
          "protos": [
            "test/test.proto"
          ],
          "protoRoot": "protos/",
          "timeout": 3000
        },
        "pipe": {
          "service": "test"
        }
      },
      "loadbalancer": {
        "name": "roundRobin"
      },
      "publisher": {
        "name": "static",
        "instances": [
          "grpc://localhost:50051"
        ]
      },
      "endpoints": {
        "test": {
          "loadbalancer": {
            "name": "random",
            "seed": 0
          },
          "publisher": {
            "name": "static",
            "instances": [
              "grpc://localhost:50051"
            ]
          }
        },
        "notImplemented": {
          "loadbalancer": {
            "name": "roundRobin"
          },
          "publisher": {
            "name": "static",
            "instances": [
              "grpc://localhost:50051"
            ]
          }
        },
        "throw": {},
        "notFound": {}
      }
    },
    "stream": {
      "logger": {
        "console": {
          "handleExceptions": false,
          "level": "error",
          "colorize": true,
          "prettyPrint": true
        }
      },
      "transports": {
        "grpc": {
          "service": "test.Stream",
          "protos": [
            "test/test.proto"
          ],
          "protoRoot": "protos/",
          "timeout": 3000
        }
      },
      "loadbalancer": {
        "name": "roundRobin"
      },
      "publisher": {
        "name": "static",
        "instances": [
          "grpc://localhost:50051"
        ]
      },
      "endpoints": {
        "biStream": {},
        "requestStream": {},
        "responseStream": {}
      }
    },
    "reflection": {
      "transports": {
        "grpc": {
          "service": "grpc.reflection.v1alpha.ServerReflection",
          "protos": [
            "grpc/reflection/v1alpha/reflection.proto"
          ],
          "protoRoot": "protos/",
          "timeout": 3000
        }
      },
      "loadbalancer": {
        "name": "roundRobin"
      },
      "publisher": {
        "name": "static",
        "instances": [
          "grpc://localhost:50051"
        ]
      },
      "endpoints": {
        "serverReflectionInfo": {}
      }
    },
    "health": {
      "transports": {
        "grpc": {
          "service": "grpc.health.v1.Health",
          "protos": [
            "grpc/health/v1/health.proto"
          ],
          "protoRoot": "protos/",
          "timeout": 3000
        }
      },
      "loadbalancer": {
        "name": "roundRobin"
      },
      "publisher": {
        "name": "static",
        "instances": [
          "grpc://localhost:50051"
        ]
      },
      "endpoints": {
        "check": {}
      }
    }
  },
  "events": {
    "kafkaTest": {
      "logger": {
        "console": {
          "handleExceptions": false,
          "level": "silly",
          "colorize": true,
          "prettyPrint": true
        }
      },
      "provider": "kafka",
      "groupId": "restore-chassis-test-server",
      "clientId": "restore-chassis-test-server",
      "connectionString": "localhost:2181",
      "protos": [
        "test.proto"
      ],
      "protoRoot": "test/protos/",
      "test-event": {
        "protos": [
          "test.proto"
        ],
        "protoRoot": "test/protos/",
        "messageObject": "test.TestEvent"
      }
    },
    "localTest": {
      "provider": "local",
      "protos": [
        "test.proto"
      ],
      "protoRoot": "test/protos/",
      "test-event": {
        "protos": [
          "test.proto"
        ],
        "protoRoot": "test/protos/",
        "messageObject": "test.TestEvent"
      }
    }
  },
  "server": {
    "logger": {
      "console": {
        "handleExceptions": false,
        "level": "error",
        "colorize": true,
        "prettyPrint": true
      }
    },
    "services": {
      "test": {
        "test": {
          "transport": [
            "grpcTest",
            "pipeline"
          ]
        },
        "throw": {
          "transport": [
            "grpcTest",
            "pipeline"
          ]
        },
        "notImplemented": {
          "transport": [
            "grpcTest",
            "pipeline"
          ]
        },
        "notFound": {
          "transport": [
            "grpcTest",
            "pipeline"
          ]
        }
      },
      "stream": {
        "biStream": {
          "transport": [
            "grpcTest"
          ]
        },
        "requestStream": {
          "transport": [
            "grpcTest"
          ]
        },
        "responseStream": {
          "transport": [
            "grpcTest"
          ]
        }
      },
      "reflection": {
        "serverReflectionInfo": {
          "transport": [
            "grpcTest"
          ]
        }
      },
      "health": {
        "check": {
          "transport": [
            "grpcTest",
            "pipeline"
          ]
        }
      }
    },
    "transports": [
      {
        "name": "grpcTest",
        "provider": "grpc",
        "services": {
          "test": "test.Test",
          "stream": "test.Stream",
          "reflection": "grpc.reflection.v1alpha.ServerReflection",
          "health": "grpc.health.v1.Health"
        },
        "protos": [
          "test/test.proto",
          "test/test.proto",
          "grpc/reflection/v1alpha/reflection.proto",
          "grpc/health/v1/health.proto",
          "google/protobuf/descriptor.proto"
        ],
        "protoRoot": "protos/",
        "addr": "localhost:50051"
      },
      {
        "name": "pipeline",
        "provider": "pipe",
        "addr": "piplineAddr"
      }
    ]
  }
}
